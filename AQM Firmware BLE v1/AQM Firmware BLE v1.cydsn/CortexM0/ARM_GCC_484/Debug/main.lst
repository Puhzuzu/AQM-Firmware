ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.main,"ax",%progbits
  18              		.align	2
  19              		.global	main
  20              		.code	16
  21              		.thumb_func
  22              		.type	main, %function
  23              	main:
  24              	.LFB35:
  25              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF your company.
   9:.\main.c      ****  *
  10:.\main.c      ****  * by Keith Soneda
  11:.\main.c      ****  * UC Davis - EEC136AB - Firmware for Air Quality Monitor - PSOC 4 BLE revision - March 2015
  12:.\main.c      ****  * Overview: Main FOR loop. Reads data from
  13:.\main.c      ****  * 			 array of sensors at a regular interval when a BLE connection has not been established. 
  14:.\main.c      ****  * 			 When a connected device enables notifications, past data will be sent to the connected devic
  15:.\main.c      ****  * Changes: This version lacks EEPROM. So I altered it to just send the last read cycle's data on l
  16:.\main.c      ****  * ========================================
  17:.\main.c      **** */
  18:.\main.c      **** 
  19:.\main.c      **** #include "main.h"
  20:.\main.c      **** 
  21:.\main.c      **** /*'deviceConnected' flag is used by application to know whether a Central device  
  22:.\main.c      **** * has been connected. This is updated in BLE event callback */
  23:.\main.c      **** extern uint8 deviceConnected;
  24:.\main.c      **** 
  25:.\main.c      **** /*'startNotification' flag is set when the central device writes to CCC (Client  
  26:.\main.c      **** * Characteristic Configuration) of the Random Data characteristic to 
  27:.\main.c      **** * enable notifications */
  28:.\main.c      **** extern uint8 startNotification;		
  29:.\main.c      **** 
  30:.\main.c      **** /* 'restartAdvertisement' flag is used to restart advertisement */
  31:.\main.c      **** extern uint8 restartAdvertisement;
  32:.\main.c      ****  
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 2


  33:.\main.c      **** //data holding array
  34:.\main.c      **** extern float dataArray[];
  35:.\main.c      **** 
  36:.\main.c      **** int main()
  37:.\main.c      **** {
  26              		.loc 1 37 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 00AF     		add	r7, sp, #0
  33              		.cfi_def_cfa_register 7
  38:.\main.c      ****     /* Enable global interrupt mask */
  39:.\main.c      **** 	CyGlobalIntEnable;
  34              		.loc 1 39 0
  35              	@ 39 ".\main.c" 1
  36 0004 62B6     		CPSIE   i
  37              	@ 0 "" 2
  40:.\main.c      **** 	/* This function will initialize the system resources such as BLE*/
  41:.\main.c      ****     InitializeDevice();
  38              		.loc 1 41 0
  39              		.code	16
  40 0006 FFF7FEFF 		bl	InitializeDevice
  41              	.L6:
  42:.\main.c      **** 	
  43:.\main.c      **** 	
  44:.\main.c      ****     for(;;)
  45:.\main.c      ****     {
  46:.\main.c      ****         //#ifdef BASEBOARD_IS_ENABLED
  47:.\main.c      **** 		Status_LED_Write(LED_OFF);
  42              		.loc 1 47 0
  43 000a 0120     		mov	r0, #1
  44 000c FFF7FEFF 		bl	Status_LED_Write
  48:.\main.c      **** 		GREEN_Write(LED_OFF);
  45              		.loc 1 48 0
  46 0010 0120     		mov	r0, #1
  47 0012 FFF7FEFF 		bl	GREEN_Write
  49:.\main.c      **** 		BLUE_Write(LED_OFF);
  48              		.loc 1 49 0
  49 0016 0120     		mov	r0, #1
  50 0018 FFF7FEFF 		bl	BLUE_Write
  50:.\main.c      **** 		//#endif
  51:.\main.c      **** 		/*Process Event callback to handle BLE events. The events generated and 
  52:.\main.c      **** 		* used for this application are inside the 'CustomEventHandler' routine*/
  53:.\main.c      **** 		CyBle_ProcessEvents();
  51              		.loc 1 53 0
  52 001c FFF7FEFF 		bl	CyBle_ProcessEvents
  54:.\main.c      **** 		
  55:.\main.c      **** 		#ifdef BLE_BASEBOARD_IS_ENABLED
  56:.\main.c      **** 		/* Function to handle LED status depending on BLE state */
  57:.\main.c      ****         /* Not necessary but useful to determine the state that the device is in. */
  58:.\main.c      **** 		
  59:.\main.c      **** 		HandleStatusLED();
  60:.\main.c      **** 		
  61:.\main.c      **** 		#endif
  62:.\main.c      **** 		
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 3


  63:.\main.c      **** 		
  64:.\main.c      **** 		/* Handle random data and CCCD value update only if BLE device is connected */
  65:.\main.c      **** 		if(TRUE == deviceConnected) 
  53              		.loc 1 65 0
  54 0020 0E4B     		ldr	r3, .L7
  55 0022 1B78     		ldrb	r3, [r3]
  56 0024 012B     		cmp	r3, #1
  57 0026 0AD1     		bne	.L2
  66:.\main.c      **** 		{
  67:.\main.c      **** 			/* After the connection, send new connection parameter to the Client device 
  68:.\main.c      **** 			* to run the BLE communication on desired interval. This affects the data rate 
  69:.\main.c      **** 			* and power consumption. High connection interval will have lower data rate but 
  70:.\main.c      **** 			* lower power consumption. Low connection interval will have higher data rate at
  71:.\main.c      **** 			* expense of higher power. This function is called only once per connection. */
  72:.\main.c      **** 			UpdateConnectionParam();
  58              		.loc 1 72 0
  59 0028 FFF7FEFF 		bl	UpdateConnectionParam
  73:.\main.c      **** 			
  74:.\main.c      **** 			/* When the Client Characteristic Configuration descriptor (CCCD) is written
  75:.\main.c      **** 			* by Central device for enabling/disabling notifications, then the same
  76:.\main.c      **** 			* descriptor value has to be explicitly updated in application so that
  77:.\main.c      **** 			* it reflects the correct value when the descriptor is read */
  78:.\main.c      **** 			UpdateNotificationCCCD();			
  60              		.loc 1 78 0
  61 002c FFF7FEFF 		bl	UpdateNotificationCCCD
  79:.\main.c      **** 			
  80:.\main.c      **** 			 /* Send random data when notifications are enabled */
  81:.\main.c      **** 			if(startNotification)
  62              		.loc 1 81 0
  63 0030 0B4B     		ldr	r3, .L7+4
  64 0032 1B78     		ldrb	r3, [r3]
  65 0034 002B     		cmp	r3, #0
  66 0036 04D0     		beq	.L4
  82:.\main.c      **** 			{
  83:.\main.c      **** 				/*Loops through numbers and dynamically changes the random data values when notifications are e
  84:.\main.c      **** 				/*Check for random data change and report to BLE central device*/
  85:.\main.c      **** 					//HandleRandomData(startNotification);
  86:.\main.c      **** 				
  87:.\main.c      **** 
  88:.\main.c      **** 
  89:.\main.c      **** 				/* FUNCTION TO HANDLE READ CYCLE */
  90:.\main.c      **** 				NotifyLastCycleData();
  67              		.loc 1 90 0
  68 0038 FFF7FEFF 		bl	NotifyLastCycleData
  69 003c 01E0     		b	.L4
  70              	.L2:
  91:.\main.c      **** 			}
  92:.\main.c      **** 	
  93:.\main.c      ****         }//if(TRUE == deviceConnected) 
  94:.\main.c      ****         
  95:.\main.c      **** 		else
  96:.\main.c      **** 		{	
  97:.\main.c      **** 			HandleDataCollection();	
  71              		.loc 1 97 0
  72 003e FFF7FEFF 		bl	HandleDataCollection
  73              	.L4:
  98:.\main.c      **** 		}
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 4


  99:.\main.c      ****   
 100:.\main.c      ****         if(restartAdvertisement)
  74              		.loc 1 100 0
  75 0042 084B     		ldr	r3, .L7+8
  76 0044 1B78     		ldrb	r3, [r3]
  77 0046 002B     		cmp	r3, #0
  78 0048 06D0     		beq	.L5
 101:.\main.c      **** 	    {
 102:.\main.c      **** 			/* Reset 'restartAdvertisement' flag*/
 103:.\main.c      **** 			restartAdvertisement = FALSE;
  79              		.loc 1 103 0
  80 004a 064B     		ldr	r3, .L7+8
  81 004c 0022     		mov	r2, #0
  82 004e 1A70     		strb	r2, [r3]
 104:.\main.c      **** 			
 105:.\main.c      **** 			/* Start Advertisement and enter Discoverable mode*/
 106:.\main.c      **** 			CyBle_GappStartAdvertisement(CYBLE_ADVERTISING_FAST);	
  83              		.loc 1 106 0
  84 0050 0020     		mov	r0, #0
  85 0052 FFF7FEFF 		bl	CyBle_GappStartAdvertisement
 107:.\main.c      **** 	    }
 108:.\main.c      **** 		
 109:.\main.c      ****         #ifdef ENABLE_LOW_POWER_MODE
 110:.\main.c      **** 		/* Put system to Deep sleep, including BLESS, and wakeup on interrupt. 
 111:.\main.c      **** 		* The source of the interrupt can be either BLESS Link Layer in case of 
 112:.\main.c      **** 		* BLE advertisement and connection or by User Button press during BLE 
 113:.\main.c      **** 		* disconnection */
 114:.\main.c      **** 		HandleLowPowerMode();
 115:.\main.c      **** 	    #endif		
 116:.\main.c      ****      }//for(;;)
  86              		.loc 1 116 0
  87 0056 D8E7     		b	.L6
  88              	.L5:
  89 0058 D7E7     		b	.L6
  90              	.L8:
  91 005a C046     		.align	2
  92              	.L7:
  93 005c 00000000 		.word	deviceConnected
  94 0060 00000000 		.word	startNotification
  95 0064 00000000 		.word	restartAdvertisement
  96              		.cfi_endproc
  97              	.LFE35:
  98              		.size	main, .-main
  99              		.section	.text.InitializeDevice,"ax",%progbits
 100              		.align	2
 101              		.global	InitializeDevice
 102              		.code	16
 103              		.thumb_func
 104              		.type	InitializeDevice, %function
 105              	InitializeDevice:
 106              	.LFB36:
 117:.\main.c      **** }//int main()
 118:.\main.c      **** 
 119:.\main.c      **** /* ---Initialization Function---- */
 120:.\main.c      **** void InitializeDevice(void)
 121:.\main.c      **** {	
 107              		.loc 1 121 0
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 5


 108              		.cfi_startproc
 109 0000 80B5     		push	{r7, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 00AF     		add	r7, sp, #0
 114              		.cfi_def_cfa_register 7
 122:.\main.c      **** 	/* Start ISRs */
 123:.\main.c      **** 	#ifdef XBEE_IS_ENABLED
 124:.\main.c      **** 	ISR_Xbee_StartEx(XBEE_ISR);
 125:.\main.c      **** 	
 126:.\main.c      **** 	//Initialize Components
 127:.\main.c      **** 	XBee_Start();
 128:.\main.c      **** 	XBee_ClearRxBuffer();
 129:.\main.c      **** 	XBee_ClearTxBuffer();
 130:.\main.c      **** 	#endif
 131:.\main.c      **** 
 132:.\main.c      **** 	#ifdef SI_7020_H
 133:.\main.c      **** 	I2C_1_Start();
 115              		.loc 1 133 0
 116 0004 FFF7FEFF 		bl	I2C_1_Start
 134:.\main.c      **** 	#endif
 135:.\main.c      **** 	
 136:.\main.c      **** 	#ifdef FUNCTIONS_COZIR_H		
 137:.\main.c      **** 	COZIR_Start();
 117              		.loc 1 137 0
 118 0008 FFF7FEFF 		bl	COZIR_Start
 138:.\main.c      **** 	COZIR_SpiUartClearRxBuffer();
 119              		.loc 1 138 0
 120 000c FFF7FEFF 		bl	COZIR_SpiUartClearRxBuffer
 139:.\main.c      **** 	COZIR_SpiUartClearTxBuffer();
 121              		.loc 1 139 0
 122 0010 FFF7FEFF 		bl	COZIR_SpiUartClearTxBuffer
 140:.\main.c      **** 
 141:.\main.c      **** 	//Write COZIR to standby mode
 142:.\main.c      **** //	uint8 response = 0u;
 143:.\main.c      **** //	Cozir_WriteMode(COMMAND_MODE,&response);
 144:.\main.c      **** //	if(response != COMMAND_MODE)
 145:.\main.c      **** //	{	
 146:.\main.c      **** //		Cozir_WriteMode(COMMAND_MODE,&response);	
 147:.\main.c      **** //	}
 148:.\main.c      **** 	#endif
 149:.\main.c      **** 
 150:.\main.c      **** 	/* Start BLE component and register the CustomEventHandler function. This 
 151:.\main.c      **** 	* function exposes the events from BLE component for application use */
 152:.\main.c      **** 	CyBle_Start(CustomEventHandler);					
 123              		.loc 1 152 0
 124 0014 024B     		ldr	r3, .L10
 125 0016 181C     		mov	r0, r3
 126 0018 FFF7FEFF 		bl	CyBle_Start
 153:.\main.c      **** 
 154:.\main.c      **** #ifdef BLE_BASEBOARD_IS_ENABLED
 155:.\main.c      **** 	/* Set drive mode of the status LED pin to Strong*/
 156:.\main.c      **** 	Status_LED_SetDriveMode(Status_LED_DM_STRONG);	
 157:.\main.c      **** 	
 158:.\main.c      ****    /* Start the Button ISR to allow wakeup from sleep */
 159:.\main.c      **** 	isr_button_StartEx(MyISR);
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 6


 160:.\main.c      **** 	
 161:.\main.c      **** 	Status_LED_Write(LED_ON);
 162:.\main.c      **** 	GREEN_Write(LED_ON);
 163:.\main.c      **** 	BLUE_Write(LED_ON);
 164:.\main.c      **** 	CyDelay(1000u);
 165:.\main.c      **** #endif
 166:.\main.c      **** }
 127              		.loc 1 166 0
 128 001c BD46     		mov	sp, r7
 129              		@ sp needed
 130 001e 80BD     		pop	{r7, pc}
 131              	.L11:
 132              		.align	2
 133              	.L10:
 134 0020 00000000 		.word	CustomEventHandler
 135              		.cfi_endproc
 136              	.LFE36:
 137              		.size	InitializeDevice, .-InitializeDevice
 138              		.global	__aeabi_f2uiz
 139              		.section	.text.NotifyLastCycleData,"ax",%progbits
 140              		.align	2
 141              		.global	NotifyLastCycleData
 142              		.code	16
 143              		.thumb_func
 144              		.type	NotifyLastCycleData, %function
 145              	NotifyLastCycleData:
 146              	.LFB37:
 167:.\main.c      **** 
 168:.\main.c      **** //Sends last read cycle's data over notifications in order of: 
 169:.\main.c      **** //Small Particle Dust, Large Particle dust, Temperature, Humidity, and CO2
 170:.\main.c      **** //Sends repeatedly when connected BLE device has enabled notifications.
 171:.\main.c      **** void NotifyLastCycleData(void)
 172:.\main.c      **** {
 147              		.loc 1 172 0
 148              		.cfi_startproc
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 82B0     		sub	sp, sp, #8
 154              		.cfi_def_cfa_offset 16
 155 0004 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 173:.\main.c      **** 	/* Static variable used as counter for reading the new value */
 174:.\main.c      **** 	static uint16 delayCounter = TRUE;
 175:.\main.c      **** 			
 176:.\main.c      **** 	/* Static variable to store last value */
 177:.\main.c      **** 	static uint8 lastValue = FALSE;
 178:.\main.c      **** 	
 179:.\main.c      **** 	//stores index into data array.
 180:.\main.c      **** 	static uint8 currentIndex = 0;
 181:.\main.c      **** 
 182:.\main.c      **** 	
 183:.\main.c      **** 	/* Check if Counter has reached its counting value */
 184:.\main.c      **** 	if(FALSE == (--delayCounter))			
 157              		.loc 1 184 0
 158 0006 254B     		ldr	r3, .L16
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 7


 159 0008 1B88     		ldrh	r3, [r3]
 160 000a 013B     		sub	r3, r3, #1
 161 000c 9AB2     		uxth	r2, r3
 162 000e 234B     		ldr	r3, .L16
 163 0010 1A80     		strh	r2, [r3]
 164 0012 224B     		ldr	r3, .L16
 165 0014 1B88     		ldrh	r3, [r3]
 166 0016 002B     		cmp	r3, #0
 167 0018 3DD1     		bne	.L12
 168              	.LBB2:
 185:.\main.c      **** 	{
 186:.\main.c      **** 		/* Set 'Counter' to the RAND_COUNTER_VALUE. This counter prevents sending 
 187:.\main.c      **** 		   of large number of Random data to BLE Central device */
 188:.\main.c      **** 		delayCounter = 65535;
 169              		.loc 1 188 0
 170 001a 204B     		ldr	r3, .L16
 171 001c 0122     		mov	r2, #1
 172 001e 5242     		neg	r2, r2
 173 0020 1A80     		strh	r2, [r3]
 189:.\main.c      ****         
 190:.\main.c      **** 		uint8 value;
 191:.\main.c      **** 		if(lastValue != (uint8)dataArray[currentIndex])
 174              		.loc 1 191 0
 175 0022 1F4B     		ldr	r3, .L16+4
 176 0024 1B78     		ldrb	r3, [r3]
 177 0026 1A1C     		mov	r2, r3
 178 0028 1E4B     		ldr	r3, .L16+8
 179 002a 9200     		lsl	r2, r2, #2
 180 002c D358     		ldr	r3, [r2, r3]
 181 002e 181C     		add	r0, r3, #0
 182 0030 FFF7FEFF 		bl	__aeabi_f2uiz
 183 0034 031C     		mov	r3, r0
 184 0036 DAB2     		uxtb	r2, r3
 185 0038 1B4B     		ldr	r3, .L16+12
 186 003a 1B78     		ldrb	r3, [r3]
 187 003c 9A42     		cmp	r2, r3
 188 003e 1DD0     		beq	.L14
 192:.\main.c      **** 		{
 193:.\main.c      **** 
 194:.\main.c      **** 		    value = (uint8) dataArray[currentIndex];
 189              		.loc 1 194 0
 190 0040 174B     		ldr	r3, .L16+4
 191 0042 1B78     		ldrb	r3, [r3]
 192 0044 1A1C     		mov	r2, r3
 193 0046 174B     		ldr	r3, .L16+8
 194 0048 9200     		lsl	r2, r2, #2
 195 004a D358     		ldr	r3, [r2, r3]
 196 004c 181C     		add	r0, r3, #0
 197 004e FFF7FEFF 		bl	__aeabi_f2uiz
 198 0052 031C     		mov	r3, r0
 199 0054 DAB2     		uxtb	r2, r3
 200 0056 FB1D     		add	r3, r7, #7
 201 0058 1A70     		strb	r2, [r3]
 195:.\main.c      **** 			
 196:.\main.c      **** 			/* Send the data to BLE central device by notifications*/
 197:.\main.c      **** 		    SendDataOverNotification(&value);
 202              		.loc 1 197 0
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 8


 203 005a FB1D     		add	r3, r7, #7
 204 005c 181C     		mov	r0, r3
 205 005e FFF7FEFF 		bl	SendDataOverNotification
 198:.\main.c      **** 		
 199:.\main.c      **** 		    /* Update present random value */
 200:.\main.c      **** 		    lastValue = (uint8)dataArray[currentIndex];
 206              		.loc 1 200 0
 207 0062 0F4B     		ldr	r3, .L16+4
 208 0064 1B78     		ldrb	r3, [r3]
 209 0066 1A1C     		mov	r2, r3
 210 0068 0E4B     		ldr	r3, .L16+8
 211 006a 9200     		lsl	r2, r2, #2
 212 006c D358     		ldr	r3, [r2, r3]
 213 006e 181C     		add	r0, r3, #0
 214 0070 FFF7FEFF 		bl	__aeabi_f2uiz
 215 0074 031C     		mov	r3, r0
 216 0076 DAB2     		uxtb	r2, r3
 217 0078 0B4B     		ldr	r3, .L16+12
 218 007a 1A70     		strb	r2, [r3]
 219              	.L14:
 201:.\main.c      **** 	
 202:.\main.c      **** 		}
 203:.\main.c      **** 		currentIndex+=1;//increment index
 220              		.loc 1 203 0
 221 007c 084B     		ldr	r3, .L16+4
 222 007e 1B78     		ldrb	r3, [r3]
 223 0080 0133     		add	r3, r3, #1
 224 0082 DAB2     		uxtb	r2, r3
 225 0084 064B     		ldr	r3, .L16+4
 226 0086 1A70     		strb	r2, [r3]
 204:.\main.c      **** 		if(currentIndex>4)//if end of data array has been reached, reset index
 227              		.loc 1 204 0
 228 0088 054B     		ldr	r3, .L16+4
 229 008a 1B78     		ldrb	r3, [r3]
 230 008c 042B     		cmp	r3, #4
 231 008e 02D9     		bls	.L12
 205:.\main.c      **** 		{
 206:.\main.c      **** 			currentIndex = 0;
 232              		.loc 1 206 0
 233 0090 034B     		ldr	r3, .L16+4
 234 0092 0022     		mov	r2, #0
 235 0094 1A70     		strb	r2, [r3]
 236              	.L12:
 237              	.LBE2:
 207:.\main.c      **** 		}
 208:.\main.c      **** 	}
 209:.\main.c      **** }//void NotifyLastCycleData(void)
 238              		.loc 1 209 0
 239 0096 BD46     		mov	sp, r7
 240 0098 02B0     		add	sp, sp, #8
 241              		@ sp needed
 242 009a 80BD     		pop	{r7, pc}
 243              	.L17:
 244              		.align	2
 245              	.L16:
 246 009c 00000000 		.word	delayCounter.6988
 247 00a0 00000000 		.word	currentIndex.6990
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 9


 248 00a4 00000000 		.word	dataArray
 249 00a8 01000000 		.word	lastValue.6989
 250              		.cfi_endproc
 251              	.LFE37:
 252              		.size	NotifyLastCycleData, .-NotifyLastCycleData
 253              		.data
 254              		.align	1
 255              		.type	delayCounter.6988, %object
 256              		.size	delayCounter.6988, 2
 257              	delayCounter.6988:
 258 0000 0100     		.short	1
 259              		.bss
 260              	currentIndex.6990:
 261 0000 00       		.space	1
 262              	lastValue.6989:
 263 0001 00       		.space	1
 264              		.text
 265              	.Letext0:
 266              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 267              		.section	.debug_info,"",%progbits
 268              	.Ldebug_info0:
 269 0000 58010000 		.4byte	0x158
 270 0004 0400     		.2byte	0x4
 271 0006 00000000 		.4byte	.Ldebug_abbrev0
 272 000a 04       		.byte	0x4
 273 000b 01       		.uleb128 0x1
 274 000c 68010000 		.4byte	.LASF25
 275 0010 01       		.byte	0x1
 276 0011 8D000000 		.4byte	.LASF26
 277 0015 F6000000 		.4byte	.LASF27
 278 0019 00000000 		.4byte	.Ldebug_ranges0+0
 279 001d 00000000 		.4byte	0
 280 0021 00000000 		.4byte	.Ldebug_line0
 281 0025 02       		.uleb128 0x2
 282 0026 01       		.byte	0x1
 283 0027 06       		.byte	0x6
 284 0028 F1010000 		.4byte	.LASF0
 285 002c 02       		.uleb128 0x2
 286 002d 01       		.byte	0x1
 287 002e 08       		.byte	0x8
 288 002f CA000000 		.4byte	.LASF1
 289 0033 02       		.uleb128 0x2
 290 0034 02       		.byte	0x2
 291 0035 05       		.byte	0x5
 292 0036 0D020000 		.4byte	.LASF2
 293 003a 02       		.uleb128 0x2
 294 003b 02       		.byte	0x2
 295 003c 07       		.byte	0x7
 296 003d 0E000000 		.4byte	.LASF3
 297 0041 02       		.uleb128 0x2
 298 0042 04       		.byte	0x4
 299 0043 05       		.byte	0x5
 300 0044 ED000000 		.4byte	.LASF4
 301 0048 02       		.uleb128 0x2
 302 0049 04       		.byte	0x4
 303 004a 07       		.byte	0x7
 304 004b 7B000000 		.4byte	.LASF5
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 10


 305 004f 02       		.uleb128 0x2
 306 0050 08       		.byte	0x8
 307 0051 05       		.byte	0x5
 308 0052 00000000 		.4byte	.LASF6
 309 0056 02       		.uleb128 0x2
 310 0057 08       		.byte	0x8
 311 0058 07       		.byte	0x7
 312 0059 96000000 		.4byte	.LASF7
 313 005d 03       		.uleb128 0x3
 314 005e 04       		.byte	0x4
 315 005f 05       		.byte	0x5
 316 0060 696E7400 		.ascii	"int\000"
 317 0064 02       		.uleb128 0x2
 318 0065 04       		.byte	0x4
 319 0066 07       		.byte	0x7
 320 0067 36000000 		.4byte	.LASF8
 321 006b 04       		.uleb128 0x4
 322 006c 75000000 		.4byte	.LASF9
 323 0070 02       		.byte	0x2
 324 0071 A1       		.byte	0xa1
 325 0072 2C000000 		.4byte	0x2c
 326 0076 04       		.uleb128 0x4
 327 0077 17020000 		.4byte	.LASF10
 328 007b 02       		.byte	0x2
 329 007c A2       		.byte	0xa2
 330 007d 3A000000 		.4byte	0x3a
 331 0081 02       		.uleb128 0x2
 332 0082 04       		.byte	0x4
 333 0083 04       		.byte	0x4
 334 0084 AD000000 		.4byte	.LASF11
 335 0088 02       		.uleb128 0x2
 336 0089 08       		.byte	0x8
 337 008a 04       		.byte	0x4
 338 008b 61010000 		.4byte	.LASF12
 339 008f 02       		.uleb128 0x2
 340 0090 01       		.byte	0x1
 341 0091 08       		.byte	0x8
 342 0092 B3000000 		.4byte	.LASF13
 343 0096 02       		.uleb128 0x2
 344 0097 04       		.byte	0x4
 345 0098 07       		.byte	0x7
 346 0099 1E020000 		.4byte	.LASF14
 347 009d 05       		.uleb128 0x5
 348 009e D8000000 		.4byte	.LASF15
 349 00a2 01       		.byte	0x1
 350 00a3 24       		.byte	0x24
 351 00a4 5D000000 		.4byte	0x5d
 352 00a8 00000000 		.4byte	.LFB35
 353 00ac 68000000 		.4byte	.LFE35-.LFB35
 354 00b0 01       		.uleb128 0x1
 355 00b1 9C       		.byte	0x9c
 356 00b2 06       		.uleb128 0x6
 357 00b3 64000000 		.4byte	.LASF16
 358 00b7 01       		.byte	0x1
 359 00b8 78       		.byte	0x78
 360 00b9 00000000 		.4byte	.LFB36
 361 00bd 24000000 		.4byte	.LFE36-.LFB36
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 11


 362 00c1 01       		.uleb128 0x1
 363 00c2 9C       		.byte	0x9c
 364 00c3 07       		.uleb128 0x7
 365 00c4 50000000 		.4byte	.LASF28
 366 00c8 01       		.byte	0x1
 367 00c9 AB       		.byte	0xab
 368 00ca 00000000 		.4byte	.LFB37
 369 00ce AC000000 		.4byte	.LFE37-.LFB37
 370 00d2 01       		.uleb128 0x1
 371 00d3 9C       		.byte	0x9c
 372 00d4 24010000 		.4byte	0x124
 373 00d8 08       		.uleb128 0x8
 374 00d9 E4010000 		.4byte	.LASF17
 375 00dd 01       		.byte	0x1
 376 00de AE       		.byte	0xae
 377 00df 76000000 		.4byte	0x76
 378 00e3 05       		.uleb128 0x5
 379 00e4 03       		.byte	0x3
 380 00e5 00000000 		.4byte	delayCounter.6988
 381 00e9 08       		.uleb128 0x8
 382 00ea FD010000 		.4byte	.LASF18
 383 00ee 01       		.byte	0x1
 384 00ef B1       		.byte	0xb1
 385 00f0 6B000000 		.4byte	0x6b
 386 00f4 05       		.uleb128 0x5
 387 00f5 03       		.byte	0x3
 388 00f6 01000000 		.4byte	lastValue.6989
 389 00fa 08       		.uleb128 0x8
 390 00fb 43000000 		.4byte	.LASF19
 391 00ff 01       		.byte	0x1
 392 0100 B4       		.byte	0xb4
 393 0101 6B000000 		.4byte	0x6b
 394 0105 05       		.uleb128 0x5
 395 0106 03       		.byte	0x3
 396 0107 00000000 		.4byte	currentIndex.6990
 397 010b 09       		.uleb128 0x9
 398 010c 1A000000 		.4byte	.LBB2
 399 0110 7C000000 		.4byte	.LBE2-.LBB2
 400 0114 08       		.uleb128 0x8
 401 0115 07020000 		.4byte	.LASF20
 402 0119 01       		.byte	0x1
 403 011a BE       		.byte	0xbe
 404 011b 6B000000 		.4byte	0x6b
 405 011f 02       		.uleb128 0x2
 406 0120 91       		.byte	0x91
 407 0121 77       		.sleb128 -9
 408 0122 00       		.byte	0
 409 0123 00       		.byte	0
 410 0124 0A       		.uleb128 0xa
 411 0125 DD000000 		.4byte	.LASF21
 412 0129 01       		.byte	0x1
 413 012a 17       		.byte	0x17
 414 012b 6B000000 		.4byte	0x6b
 415 012f 0A       		.uleb128 0xa
 416 0130 B8000000 		.4byte	.LASF22
 417 0134 01       		.byte	0x1
 418 0135 1C       		.byte	0x1c
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 12


 419 0136 6B000000 		.4byte	0x6b
 420 013a 0A       		.uleb128 0xa
 421 013b 21000000 		.4byte	.LASF23
 422 013f 01       		.byte	0x1
 423 0140 1F       		.byte	0x1f
 424 0141 6B000000 		.4byte	0x6b
 425 0145 0B       		.uleb128 0xb
 426 0146 81000000 		.4byte	0x81
 427 014a 50010000 		.4byte	0x150
 428 014e 0C       		.uleb128 0xc
 429 014f 00       		.byte	0
 430 0150 0A       		.uleb128 0xa
 431 0151 57010000 		.4byte	.LASF24
 432 0155 01       		.byte	0x1
 433 0156 22       		.byte	0x22
 434 0157 45010000 		.4byte	0x145
 435 015b 00       		.byte	0
 436              		.section	.debug_abbrev,"",%progbits
 437              	.Ldebug_abbrev0:
 438 0000 01       		.uleb128 0x1
 439 0001 11       		.uleb128 0x11
 440 0002 01       		.byte	0x1
 441 0003 25       		.uleb128 0x25
 442 0004 0E       		.uleb128 0xe
 443 0005 13       		.uleb128 0x13
 444 0006 0B       		.uleb128 0xb
 445 0007 03       		.uleb128 0x3
 446 0008 0E       		.uleb128 0xe
 447 0009 1B       		.uleb128 0x1b
 448 000a 0E       		.uleb128 0xe
 449 000b 55       		.uleb128 0x55
 450 000c 17       		.uleb128 0x17
 451 000d 11       		.uleb128 0x11
 452 000e 01       		.uleb128 0x1
 453 000f 10       		.uleb128 0x10
 454 0010 17       		.uleb128 0x17
 455 0011 00       		.byte	0
 456 0012 00       		.byte	0
 457 0013 02       		.uleb128 0x2
 458 0014 24       		.uleb128 0x24
 459 0015 00       		.byte	0
 460 0016 0B       		.uleb128 0xb
 461 0017 0B       		.uleb128 0xb
 462 0018 3E       		.uleb128 0x3e
 463 0019 0B       		.uleb128 0xb
 464 001a 03       		.uleb128 0x3
 465 001b 0E       		.uleb128 0xe
 466 001c 00       		.byte	0
 467 001d 00       		.byte	0
 468 001e 03       		.uleb128 0x3
 469 001f 24       		.uleb128 0x24
 470 0020 00       		.byte	0
 471 0021 0B       		.uleb128 0xb
 472 0022 0B       		.uleb128 0xb
 473 0023 3E       		.uleb128 0x3e
 474 0024 0B       		.uleb128 0xb
 475 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 13


 476 0026 08       		.uleb128 0x8
 477 0027 00       		.byte	0
 478 0028 00       		.byte	0
 479 0029 04       		.uleb128 0x4
 480 002a 16       		.uleb128 0x16
 481 002b 00       		.byte	0
 482 002c 03       		.uleb128 0x3
 483 002d 0E       		.uleb128 0xe
 484 002e 3A       		.uleb128 0x3a
 485 002f 0B       		.uleb128 0xb
 486 0030 3B       		.uleb128 0x3b
 487 0031 0B       		.uleb128 0xb
 488 0032 49       		.uleb128 0x49
 489 0033 13       		.uleb128 0x13
 490 0034 00       		.byte	0
 491 0035 00       		.byte	0
 492 0036 05       		.uleb128 0x5
 493 0037 2E       		.uleb128 0x2e
 494 0038 00       		.byte	0
 495 0039 3F       		.uleb128 0x3f
 496 003a 19       		.uleb128 0x19
 497 003b 03       		.uleb128 0x3
 498 003c 0E       		.uleb128 0xe
 499 003d 3A       		.uleb128 0x3a
 500 003e 0B       		.uleb128 0xb
 501 003f 3B       		.uleb128 0x3b
 502 0040 0B       		.uleb128 0xb
 503 0041 49       		.uleb128 0x49
 504 0042 13       		.uleb128 0x13
 505 0043 11       		.uleb128 0x11
 506 0044 01       		.uleb128 0x1
 507 0045 12       		.uleb128 0x12
 508 0046 06       		.uleb128 0x6
 509 0047 40       		.uleb128 0x40
 510 0048 18       		.uleb128 0x18
 511 0049 9642     		.uleb128 0x2116
 512 004b 19       		.uleb128 0x19
 513 004c 00       		.byte	0
 514 004d 00       		.byte	0
 515 004e 06       		.uleb128 0x6
 516 004f 2E       		.uleb128 0x2e
 517 0050 00       		.byte	0
 518 0051 3F       		.uleb128 0x3f
 519 0052 19       		.uleb128 0x19
 520 0053 03       		.uleb128 0x3
 521 0054 0E       		.uleb128 0xe
 522 0055 3A       		.uleb128 0x3a
 523 0056 0B       		.uleb128 0xb
 524 0057 3B       		.uleb128 0x3b
 525 0058 0B       		.uleb128 0xb
 526 0059 27       		.uleb128 0x27
 527 005a 19       		.uleb128 0x19
 528 005b 11       		.uleb128 0x11
 529 005c 01       		.uleb128 0x1
 530 005d 12       		.uleb128 0x12
 531 005e 06       		.uleb128 0x6
 532 005f 40       		.uleb128 0x40
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 14


 533 0060 18       		.uleb128 0x18
 534 0061 9642     		.uleb128 0x2116
 535 0063 19       		.uleb128 0x19
 536 0064 00       		.byte	0
 537 0065 00       		.byte	0
 538 0066 07       		.uleb128 0x7
 539 0067 2E       		.uleb128 0x2e
 540 0068 01       		.byte	0x1
 541 0069 3F       		.uleb128 0x3f
 542 006a 19       		.uleb128 0x19
 543 006b 03       		.uleb128 0x3
 544 006c 0E       		.uleb128 0xe
 545 006d 3A       		.uleb128 0x3a
 546 006e 0B       		.uleb128 0xb
 547 006f 3B       		.uleb128 0x3b
 548 0070 0B       		.uleb128 0xb
 549 0071 27       		.uleb128 0x27
 550 0072 19       		.uleb128 0x19
 551 0073 11       		.uleb128 0x11
 552 0074 01       		.uleb128 0x1
 553 0075 12       		.uleb128 0x12
 554 0076 06       		.uleb128 0x6
 555 0077 40       		.uleb128 0x40
 556 0078 18       		.uleb128 0x18
 557 0079 9642     		.uleb128 0x2116
 558 007b 19       		.uleb128 0x19
 559 007c 01       		.uleb128 0x1
 560 007d 13       		.uleb128 0x13
 561 007e 00       		.byte	0
 562 007f 00       		.byte	0
 563 0080 08       		.uleb128 0x8
 564 0081 34       		.uleb128 0x34
 565 0082 00       		.byte	0
 566 0083 03       		.uleb128 0x3
 567 0084 0E       		.uleb128 0xe
 568 0085 3A       		.uleb128 0x3a
 569 0086 0B       		.uleb128 0xb
 570 0087 3B       		.uleb128 0x3b
 571 0088 0B       		.uleb128 0xb
 572 0089 49       		.uleb128 0x49
 573 008a 13       		.uleb128 0x13
 574 008b 02       		.uleb128 0x2
 575 008c 18       		.uleb128 0x18
 576 008d 00       		.byte	0
 577 008e 00       		.byte	0
 578 008f 09       		.uleb128 0x9
 579 0090 0B       		.uleb128 0xb
 580 0091 01       		.byte	0x1
 581 0092 11       		.uleb128 0x11
 582 0093 01       		.uleb128 0x1
 583 0094 12       		.uleb128 0x12
 584 0095 06       		.uleb128 0x6
 585 0096 00       		.byte	0
 586 0097 00       		.byte	0
 587 0098 0A       		.uleb128 0xa
 588 0099 34       		.uleb128 0x34
 589 009a 00       		.byte	0
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 15


 590 009b 03       		.uleb128 0x3
 591 009c 0E       		.uleb128 0xe
 592 009d 3A       		.uleb128 0x3a
 593 009e 0B       		.uleb128 0xb
 594 009f 3B       		.uleb128 0x3b
 595 00a0 0B       		.uleb128 0xb
 596 00a1 49       		.uleb128 0x49
 597 00a2 13       		.uleb128 0x13
 598 00a3 3F       		.uleb128 0x3f
 599 00a4 19       		.uleb128 0x19
 600 00a5 3C       		.uleb128 0x3c
 601 00a6 19       		.uleb128 0x19
 602 00a7 00       		.byte	0
 603 00a8 00       		.byte	0
 604 00a9 0B       		.uleb128 0xb
 605 00aa 01       		.uleb128 0x1
 606 00ab 01       		.byte	0x1
 607 00ac 49       		.uleb128 0x49
 608 00ad 13       		.uleb128 0x13
 609 00ae 01       		.uleb128 0x1
 610 00af 13       		.uleb128 0x13
 611 00b0 00       		.byte	0
 612 00b1 00       		.byte	0
 613 00b2 0C       		.uleb128 0xc
 614 00b3 21       		.uleb128 0x21
 615 00b4 00       		.byte	0
 616 00b5 00       		.byte	0
 617 00b6 00       		.byte	0
 618 00b7 00       		.byte	0
 619              		.section	.debug_aranges,"",%progbits
 620 0000 2C000000 		.4byte	0x2c
 621 0004 0200     		.2byte	0x2
 622 0006 00000000 		.4byte	.Ldebug_info0
 623 000a 04       		.byte	0x4
 624 000b 00       		.byte	0
 625 000c 0000     		.2byte	0
 626 000e 0000     		.2byte	0
 627 0010 00000000 		.4byte	.LFB35
 628 0014 68000000 		.4byte	.LFE35-.LFB35
 629 0018 00000000 		.4byte	.LFB36
 630 001c 24000000 		.4byte	.LFE36-.LFB36
 631 0020 00000000 		.4byte	.LFB37
 632 0024 AC000000 		.4byte	.LFE37-.LFB37
 633 0028 00000000 		.4byte	0
 634 002c 00000000 		.4byte	0
 635              		.section	.debug_ranges,"",%progbits
 636              	.Ldebug_ranges0:
 637 0000 00000000 		.4byte	.LFB35
 638 0004 68000000 		.4byte	.LFE35
 639 0008 00000000 		.4byte	.LFB36
 640 000c 24000000 		.4byte	.LFE36
 641 0010 00000000 		.4byte	.LFB37
 642 0014 AC000000 		.4byte	.LFE37
 643 0018 00000000 		.4byte	0
 644 001c 00000000 		.4byte	0
 645              		.section	.debug_line,"",%progbits
 646              	.Ldebug_line0:
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 16


 647 0000 A8000000 		.section	.debug_str,"MS",%progbits,1
 647      02004500 
 647      00000201 
 647      FB0E0D00 
 647      01010101 
 648              	.LASF6:
 649 0000 6C6F6E67 		.ascii	"long long int\000"
 649      206C6F6E 
 649      6720696E 
 649      7400
 650              	.LASF3:
 651 000e 73686F72 		.ascii	"short unsigned int\000"
 651      7420756E 
 651      7369676E 
 651      65642069 
 651      6E7400
 652              	.LASF23:
 653 0021 72657374 		.ascii	"restartAdvertisement\000"
 653      61727441 
 653      64766572 
 653      74697365 
 653      6D656E74 
 654              	.LASF8:
 655 0036 756E7369 		.ascii	"unsigned int\000"
 655      676E6564 
 655      20696E74 
 655      00
 656              	.LASF19:
 657 0043 63757272 		.ascii	"currentIndex\000"
 657      656E7449 
 657      6E646578 
 657      00
 658              	.LASF28:
 659 0050 4E6F7469 		.ascii	"NotifyLastCycleData\000"
 659      66794C61 
 659      73744379 
 659      636C6544 
 659      61746100 
 660              	.LASF16:
 661 0064 496E6974 		.ascii	"InitializeDevice\000"
 661      69616C69 
 661      7A654465 
 661      76696365 
 661      00
 662              	.LASF9:
 663 0075 75696E74 		.ascii	"uint8\000"
 663      3800
 664              	.LASF5:
 665 007b 6C6F6E67 		.ascii	"long unsigned int\000"
 665      20756E73 
 665      69676E65 
 665      6420696E 
 665      7400
 666              	.LASF26:
 667 008d 2E5C6D61 		.ascii	".\\main.c\000"
 667      696E2E63 
 667      00
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 17


 668              	.LASF7:
 669 0096 6C6F6E67 		.ascii	"long long unsigned int\000"
 669      206C6F6E 
 669      6720756E 
 669      7369676E 
 669      65642069 
 670              	.LASF11:
 671 00ad 666C6F61 		.ascii	"float\000"
 671      7400
 672              	.LASF13:
 673 00b3 63686172 		.ascii	"char\000"
 673      00
 674              	.LASF22:
 675 00b8 73746172 		.ascii	"startNotification\000"
 675      744E6F74 
 675      69666963 
 675      6174696F 
 675      6E00
 676              	.LASF1:
 677 00ca 756E7369 		.ascii	"unsigned char\000"
 677      676E6564 
 677      20636861 
 677      7200
 678              	.LASF15:
 679 00d8 6D61696E 		.ascii	"main\000"
 679      00
 680              	.LASF21:
 681 00dd 64657669 		.ascii	"deviceConnected\000"
 681      6365436F 
 681      6E6E6563 
 681      74656400 
 682              	.LASF4:
 683 00ed 6C6F6E67 		.ascii	"long int\000"
 683      20696E74 
 683      00
 684              	.LASF27:
 685 00f6 433A5C55 		.ascii	"C:\\Users\\ksoneda\\Documents\\PSoC Creator\\Senior"
 685      73657273 
 685      5C6B736F 
 685      6E656461 
 685      5C446F63 
 686 0124 20446573 		.ascii	" Design\\AQM Firmware BLE\\AQM Firmware BLE v1.cyds"
 686      69676E5C 
 686      41514D20 
 686      4669726D 
 686      77617265 
 687 0155 6E00     		.ascii	"n\000"
 688              	.LASF24:
 689 0157 64617461 		.ascii	"dataArray\000"
 689      41727261 
 689      7900
 690              	.LASF12:
 691 0161 646F7562 		.ascii	"double\000"
 691      6C6500
 692              	.LASF25:
 693 0168 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 693      4320342E 
ARM GAS  C:\Users\ksoneda\AppData\Local\Temp\ccchKDNO.s 			page 18


 693      382E3420 
 693      32303134 
 693      30353236 
 694 019b 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 694      20726576 
 694      6973696F 
 694      6E203231 
 694      31333538 
 695 01ce 30202D66 		.ascii	"0 -ffunction-sections\000"
 695      66756E63 
 695      74696F6E 
 695      2D736563 
 695      74696F6E 
 696              	.LASF17:
 697 01e4 64656C61 		.ascii	"delayCounter\000"
 697      79436F75 
 697      6E746572 
 697      00
 698              	.LASF0:
 699 01f1 7369676E 		.ascii	"signed char\000"
 699      65642063 
 699      68617200 
 700              	.LASF18:
 701 01fd 6C617374 		.ascii	"lastValue\000"
 701      56616C75 
 701      6500
 702              	.LASF20:
 703 0207 76616C75 		.ascii	"value\000"
 703      6500
 704              	.LASF2:
 705 020d 73686F72 		.ascii	"short int\000"
 705      7420696E 
 705      7400
 706              	.LASF10:
 707 0217 75696E74 		.ascii	"uint16\000"
 707      313600
 708              	.LASF14:
 709 021e 73697A65 		.ascii	"sizetype\000"
 709      74797065 
 709      00
 710              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
